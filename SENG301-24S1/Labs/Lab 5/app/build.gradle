import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // use hibernate to persist (java) domain entities for us, aka JPA implementation
    implementation 'org.hibernate:hibernate-core:6.4.3.Final'

    // use a in-memory database to store entities (can be substituted with any database)
    implementation 'com.h2database:h2:2.2.224'

    // Sqlite as persistent DB
    implementation 'org.xerial:sqlite-jdbc:3.45.1.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.3.Final'

    //Cucumber dependencies
    testImplementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.15.0'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'uc.seng301.petbattler.lab5.App'
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    filter {
        includeTestsMatching "uc.seng301.petbattler.lab5.unittests.*"
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

tasks.register("cucumber", Test) {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    filter {
        includeTestsMatching "uc.seng301.petbattler.lab5.cucumber.*"
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat TestExceptionFormat.FULL
    }
}
