/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package uc.seng301.petbattler.lab4;

import org.checkerframework.checker.units.qual.C;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import uc.seng301.petbattler.lab4.model.Pack;
import uc.seng301.petbattler.lab4.model.Pet;
import uc.seng301.petbattler.lab4.model.Player;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;



public class App {
    private static SessionFactory sessionFactory;
    public App() {
        Configuration configuration = new Configuration();
        configuration.configure();
        sessionFactory = configuration.buildSessionFactory();
    }

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        java.util.logging.Logger.getLogger("org.hibernate").setLevel(Level.SEVERE);
        System.out.println(new App().getGreeting());


        Pet ant = new Pet("Ant", 10, 10);
        Pet beaver = new Pet("Beaver", 6, 14);

        List<Pet> pet_list = new ArrayList<>();
        pet_list.add(ant);
        pet_list.add(beaver);

        Pack pack = new Pack("First Pack", pet_list);

        List<Pack> pack_list = new ArrayList<>();
        pack_list.add(pack);

        Player player = new Player(pack_list, "Player");

        Transaction transaction = null;
        Long playerId = -1L;
        try (Session session = sessionFactory.openSession()) {
            System.out.println("Persisting a player with a pack of pets");
            transaction = session.beginTransaction();
            session.persist(player);
            playerId = player.getPlayerId();
            session.persist(pack);
            session.persist(ant);
            session.persist(beaver);
            // persist into the database
            transaction.commit();
        } catch (HibernateException e) {
            System.err.println("Unable to open session or transaction");
            e.printStackTrace();
            if (transaction != null) {
                transaction.rollback();
            }
        }

        try (Session session = sessionFactory.openSession()) {
            System.out.println("Retrieving player with id: " + playerId);
            Player retrievedPlayer = session.createQuery("FROM Player WHERE playerId =" + playerId, Player.class).uniqueResult();
            System.out.println(retrievedPlayer);
        } catch (HibernateException e) {
            System.err.println("Unable to open session or transaction");
            e.printStackTrace();
        }
    }
}
